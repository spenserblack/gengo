---
source: gengo-impl/src/lib.rs
expression: tokens
---
TokenStream [
    Ident {
        sym: vec,
    },
    Punct {
        char: '!',
        spacing: Alone,
    },
    Group {
        delimiter: Bracket,
        stream: TokenStream [
            Ident {
                sym: Analyzer,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: new,
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Ident {
                        sym: Language,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: PlainText,
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Ident {
                        sym: Category,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: Prose,
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Literal {
                        lit: "#000000",
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Punct {
                        char: '&',
                        spacing: Alone,
                    },
                    Group {
                        delimiter: Bracket,
                        stream: TokenStream [
                            Literal {
                                lit: ".text",
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                            },
                            Literal {
                                lit: ".txt",
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                            },
                        ],
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Punct {
                        char: '&',
                        spacing: Alone,
                    },
                    Group {
                        delimiter: Bracket,
                        stream: TokenStream [
                            Literal {
                                lit: "LICENCE",
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                            },
                            Literal {
                                lit: "LICENSE",
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                            },
                        ],
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Punct {
                        char: '&',
                        spacing: Alone,
                    },
                    Group {
                        delimiter: Bracket,
                        stream: TokenStream [],
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Punct {
                        char: '&',
                        spacing: Alone,
                    },
                    Group {
                        delimiter: Bracket,
                        stream: TokenStream [],
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Literal {
                        lit: 0.5f32,
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                ],
            },
            Punct {
                char: ',',
                spacing: Alone,
            },
            Ident {
                sym: Analyzer,
            },
            Punct {
                char: ':',
                spacing: Joint,
            },
            Punct {
                char: ':',
                spacing: Alone,
            },
            Ident {
                sym: new,
            },
            Group {
                delimiter: Parenthesis,
                stream: TokenStream [
                    Ident {
                        sym: Language,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: Dockerfile,
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Ident {
                        sym: Category,
                    },
                    Punct {
                        char: ':',
                        spacing: Joint,
                    },
                    Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    Ident {
                        sym: Programming,
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Literal {
                        lit: "#0000AA",
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Punct {
                        char: '&',
                        spacing: Alone,
                    },
                    Group {
                        delimiter: Bracket,
                        stream: TokenStream [],
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Punct {
                        char: '&',
                        spacing: Alone,
                    },
                    Group {
                        delimiter: Bracket,
                        stream: TokenStream [
                            Literal {
                                lit: "Dockerfile",
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                            },
                        ],
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Punct {
                        char: '&',
                        spacing: Alone,
                    },
                    Group {
                        delimiter: Bracket,
                        stream: TokenStream [
                            Literal {
                                lit: "Dockerfile\\.[\\w\\d]+$",
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                            },
                        ],
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Punct {
                        char: '&',
                        spacing: Alone,
                    },
                    Group {
                        delimiter: Bracket,
                        stream: TokenStream [
                            Literal {
                                lit: "^(?m)ENTRYPOINT\\ ",
                            },
                            Punct {
                                char: ',',
                                spacing: Alone,
                            },
                        ],
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                    Literal {
                        lit: 0.75f32,
                    },
                    Punct {
                        char: ',',
                        spacing: Alone,
                    },
                ],
            },
            Punct {
                char: ',',
                spacing: Alone,
            },
        ],
    },
]
